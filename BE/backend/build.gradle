buildscript {
	ext {
		queryDslVersion = "5.0.0"
		sonar_token = System.getenv('SONAR_TOKEN')
		sonar_url = System.getenv('SONAR_URL')
	}
}
plugins {
	id 'java'
	id 'jacoco'
	id 'org.springframework.boot' version '2.7.12'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
	id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
	id "org.sonarqube" version "4.3.0.3225"
}

group = 'project.main'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}
repositories {
	mavenCentral()
	maven { url 'https://jitpack.io' }
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	implementation 'org.springframework.boot:spring-boot-starter-mail'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity5'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.h2database:h2'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	//querydsl 추가
	implementation "com.querydsl:querydsl-jpa:${queryDslVersion}" // querydsl 라이브러리
	annotationProcessor "com.querydsl:querydsl-apt:${queryDslVersion}" //  Querydsl 관련 코드 생성 기능 제공

	implementation 'com.github.downgoon:marvin:1.5.5'
	implementation 'com.github.downgoon:MarvinPlugins:1.5.5'
	implementation 'org.springframework.boot:spring-boot-starter-test'

	//jwt 의존성
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
	runtimeOnly	'io.jsonwebtoken:jjwt-jackson:0.11.5'

	implementation group: 'org.springframework.boot', name: 'spring-boot-starter-mail', version: '2.6.3'

	implementation 'com.google.guava:guava:31.1-jre'
	//스웨거
	implementation 'org.springdoc:springdoc-openapi-ui:1.7.0'

	//아임포트
	implementation 'com.github.iamport:iamport-rest-client-java:0.2.23'
	//Spring Test Container
	testImplementation 'org.testcontainers:testcontainers'
	testImplementation "org.testcontainers:junit-jupiter:1.19.0"
	testImplementation "org.testcontainers:mysql:1.19.0"
}

tasks.named('test') {
	useJUnitPlatform()
}
sonar {
	properties {
		property("sonar.coverage.jacoco.xmlReportPaths", "$buildDir/report/JacocoXML.xml")
		property("sonar.projectKey", "user-service-token")
		property("sonar.organization", "myOrganization")
		property("sonar.host.url", "$sonar_url")
		property("sonar.login", "$sonar_token")
	}
}

jacoco {
	toolVersion = '0.8.9'

	reportsDirectory = layout.buildDirectory.dir('reports/result')
}

test.finalizedBy 'jacocoTestReport', 'sonarqube'


jacocoTestReport {
	reports {
		html.required = false
		csv.required = true
		xml.required = true

		xml.outputLocation = file("$buildDir/report/JacocoXML.xml")
		csv.outputLocation = file("$buildDir/report/JacocoCSV.csv")

	}

	finalizedBy 'jacocoTestCoverageVerification'
}

jacocoTestCoverageVerification {
	violationRules {
		rule {
			limit {
				minimum = 0.10
			}
		}
	}
}

//모든 테스트 구현 이후 활성화 필요
//test {
//	jacoco {
//		destinationFile = file("$buildDir/jacoco/jacoco.exec")
//	}
//	finalizedBy('jacocoTestReport', 'sonarqube')
//}

def querydslDir = "$buildDir/generated/querydsl"

querydsl {
	jpa = true
	querydslSourcesDir = querydslDir
}
sourceSets {
	main.java.srcDir querydslDir
}
compileQuerydsl{
	options.annotationProcessorPath = configurations.querydsl
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
	querydsl.extendsFrom compileClasspath
}

